spring.application.name=gateway-service
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://auth-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[0].filters[1].name=RequestRateLimiter
spring.cloud.gateway.routes[0].filters[1].args.redis-rate-limiter.replenishRate=${RATE_LIMIT_REPLENISH:10}
spring.cloud.gateway.routes[0].filters[1].args.redis-rate-limiter.burstCapacity=${RATE_LIMIT_BURST:20}
spring.cloud.gateway.routes[0].filters[1].args.key-resolver=#{@userKeyResolver}
spring.cloud.gateway.routes[0].filters[2].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[2].args.name=authCircuitBreaker
spring.cloud.gateway.routes[0].filters[2].args.fallbackUri=forward:/fallback/auth

spring.cloud.gateway.routes[1].id=task-service
spring.cloud.gateway.routes[1].uri=lb://task-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/tasks/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[1].filters[1]=AddRequestHeader=X-User-ID, ${user-id}
spring.cloud.gateway.routes[1].filters[2].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[2].args.name=taskCircuitBreaker
spring.cloud.gateway.routes[1].filters[2].args.fallbackUri=forward:/fallback/task

spring.redis.host=${REDIS_HOST:redis}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.timeout=5000
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8

spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://auth-service:3002}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWT_JWKS_URI:http://auth-service:3002/api/auth/.well-known/jwks.json}

spring.data.redis.reactive=true

resilience4j.circuitbreaker.instances.authCircuitBreaker.baseConfig=default
resilience4j.circuitbreaker.instances.taskCircuitBreaker.baseConfig=default
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=10
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true

resilience4j.timelimiter.configs.default.timeout-duration=2s

eureka.client.service-url.default-zone=${EUREKA_SERVER:http://discovery-server:8761/eureka}
eureka.client.healthcheck.enabled=true
eureka.client.registry-fetch-interval-seconds=5
eureka.instance.prefer-ip-address=true
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=15

management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,circuitbreakers

server.port=${SERVER_PORT:8080}
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

logging.level.org.springframework.cloud.gateway=${GATEWAY_LOG_LEVEL:DEBUG}
logging.level.reactor.netty=${NETTY_LOG_LEVEL:INFO}
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.com.dev.oussama=DEBUG

jwt.signing-secret=${JWT_SECRET:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}